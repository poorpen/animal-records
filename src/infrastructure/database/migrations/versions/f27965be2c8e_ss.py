"""ss

Revision ID: f27965be2c8e
Revises: 
Create Date: 2023-03-06 01:18:11.543651

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f27965be2c8e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=60), nullable=True),
    sa.Column('last_name', sa.String(length=60), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('animal_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('location_points',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('latitude'),
    sa.UniqueConstraint('longitude')
    )
    op.create_table('animals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('length', sa.Float(), nullable=False),
    sa.Column('height', sa.Float(), nullable=False),
    # sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', name='gender'), nullable=True),
    # sa.Column('life_status', sa.Enum('ALIVE', 'DEAD', name='lifestatus'), nullable=True),
    sa.Column('chipping_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('chipping_location_id', sa.Integer(), nullable=True),
    sa.Column('chipper_id', sa.Integer(), nullable=True),
    sa.Column('death_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['chipper_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['chipping_location_id'], ['location_points.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('animal_visited_location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('animal_id', sa.Integer(), nullable=True),
    sa.Column('location_point_id', sa.Integer(), nullable=True),
    sa.Column('datetime_of_visit', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['animal_id'], ['animals.id'], ),
    sa.ForeignKeyConstraint(['location_point_id'], ['location_points.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('type_of_specific_animal',
    sa.Column('animal_id', sa.Integer(), nullable=False),
    sa.Column('animal_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['animal_id'], ['animals.id'], ),
    sa.ForeignKeyConstraint(['animal_type_id'], ['animal_types.id'], ),
    sa.PrimaryKeyConstraint('animal_id', 'animal_type_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('type_of_specific_animal')
    op.drop_table('animal_visited_location')
    op.drop_table('animals')
    op.drop_table('location_points')
    op.drop_table('animal_types')
    op.drop_table('accounts')
    # ### end Alembic commands ###
